/*========================================
 *			XMLDOM.java 
 =======================================*/


package com.test;

import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

public class XMLDOM
{

	public static String getText(Element parent, String tagName)
	{
		// 반환할 값
		String result= "";
		
		// 대사 태그 객체의 첫 번재 자식 노드 얻어오기
		Node node = parent.getElementsByTagName(tagName).item(0);
		Element element = (Element)node;
		
		// 대상 엘리먼트의 자식노드의 값 얻어오기
		result = element.getChildNodes().item(0).getNodeValue();
		
		
		return result;
	}
	
	public static String getText2(Element parent, String tagName)
	{
		// 반환할 값
		String result= "";
		
		// 대사 태그 객체의 첫 번재 자식 노드 얻어오기
		Node node = parent.getElementsByTagName(tagName).item(0);
		Element element = (Element)node;
		
		// 대상 엘리먼트의 자식노드의 값 얻어오기
		result = element.getTextContent();
		
		
		return result;
	}
	
	/*
	public static void printAll(Element parent) 
	{
	    NodeList nodeList = parent.getChildNodes();

	    for (int i = 0; i < nodeList.getLength(); i++) 
	    {
	        Node node = nodeList.item(i);

	        // 태그인지 확인 (텍스트 노드 등 제외)
	        if (node.getNodeType() == Node.ELEMENT_NODE) 
	        {
	            Element element = (Element) node;
	            String tagName = element.getTagName();
	            String value = element.getTextContent().trim();
	            
	            
	            System.out.printf("%s : %s%n", tagName, value);
	        }
	    }
	}
	*/
	public static void printAll(Element parent, String indent) {
	    NodeList nodeList = parent.getChildNodes();

	    for (int i = 0; i < nodeList.getLength(); i++) 
	    {
	        Node node = nodeList.item(i);

	        // 태그인지 확인 (텍스트 노드 등 제외)
	        if (node.getNodeType() == Node.ELEMENT_NODE) 
	        {
	            Element element = (Element) node;
	            String tagName = element.getTagName();

	            // 자식 노드가 있는지 확인
	            NodeList children = element.getChildNodes();
	            boolean hasChildElements = false;

	            for (int j = 0; j < children.getLength(); j++) 
	            {
	                if (children.item(j).getNodeType() == Node.ELEMENT_NODE) 
	                {
	                    hasChildElements = true;
	                    break;
	                }
	            }

	            if (hasChildElements) 
	            {
	                // 내부에 노드가 있으면 해당 노드를 출력하고 재귀 호출
	                System.out.printf("%s%s :%n", indent, tagName);
	                printAll(element, indent + "    "); // 재귀 호출 (들여쓰기 추가)
	            } 
	            else 
	            {
	                // 내부에 노드가 없으면 값만 출력
	                String value = element.getTextContent().trim();
	                System.out.printf("%s%s : %s%n", indent, tagName, value);
	            }
	        }
	    }
	}
	
}
	
	
