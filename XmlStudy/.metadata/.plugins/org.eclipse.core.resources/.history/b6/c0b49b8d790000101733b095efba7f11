/*=============================
 * 	XmlDomTest05.java
 * 	- 콘솔 기반 자바 프로그램
 * 	- XML DOM 활용 → 로컬(local) XML 읽어내기
 * 	  (rss.xml)
 ============================*/

package com.test;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

import com.sun.javafx.image.impl.ByteIndexed.Getter;

public class XmlDomTest05
{
	public static void main(String[] args)
	{
		
		try
		{
			DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
			Document xmlObj = builder.parse("rss.xml"); 
			
			// 2. 루트 엘리먼트 접근
			
			Element root = xmlObj.getDocumentElement();
			
			// 3-1. 타이틀 추출하기
			Node itemNode = root.getElementsByTagName("item").item(0);
			Element itemElement = (Element)itemNode;
			
			System.out.printf("%s%n%n", XMLDOM.getText2(itemElement, "title") );
			
			// 3-2. 예보요약 추출하기
			Node summaryNode = root.getElementsByTagName("summary").item(0);
			Element summaryElement = (Element)summaryNode;
			
			System.out.println("[예보요약]---------------------------------------------------------");
			System.out.printf("%s%n%n",summaryElement.getTextContent().replaceAll("<br>", "\n"));
			
			// 3-3. 지역별 예보 추출하기
			System.out.println("[지역별 날씨]---------------------------------------------------------");
			NodeList local_taNodeList = root.getElementsByTagName("local_ta");
			
			for (int i = 0; i < local_taNodeList.getLength(); i++)
			{
			//System.out.println(local_taNodeList.getLength());
			//--==>> 13
				
				Node local_taNode = local_taNodeList.item(i);
				Element local_taElement = (Element)local_taNode;
				//System.out.println(local_taElement.getNodeName());
			
				//NodeList local_ta_nameNodeList = local_taElement.getElementsByTagName("local_ta_name");
				//Node local_ta_nameNode = local_ta_nameNodeList.item(0);
				//Element local_ta_nameElement = (Element)local_ta_nameNode;
				
				//추가 간소화
				//System.out.println(local_taElement.getElementsByTagName("local_ta_name").item(0).getTextContent());
				//추가 함수 정의
				System.out.printf("지역 : %s%n%n",XMLDOM.getText2(local_taElement, "local_ta_name"));
				
				
				NodeList week_local_taNodeList = local_taElement.getElementsByTagName("week_local_ta");
				for (int j = 0; j < week_local_taNodeList.getLength(); j++)
				{
					Node week_local_taNode = week_local_taNodeList.item(j);
					Element week_local_taElement = (Element)week_local_taNode;
					
					System.out.println(j+1 +"주차");
					XMLDOM.printAll(week_local_taElement,"");
					System.out.println();
				}
				
				
				//확인
				//System.out.println(week_local_taNodeList.getLength());
				//--==>> 4
				
				/*
				System.out.printf("1주차 평년 : %s%n%n",XMLDOM.getText(local_taElement, "week1_local_ta_normalYear"));
				System.out.printf("1주차 작년비슷 : %s%n%n",XMLDOM.getText(local_taElement, "week1_local_ta_similarRange"));
				System.out.printf("1주차 최저 : %s%n%n",XMLDOM.getText(local_taElement, "week1_local_ta_minVal"));
				System.out.printf("1주차 작년비슷평균 : %s%n%n",XMLDOM.getText(local_taElement, "week1_local_ta_similarVal"));
				System.out.printf("1주차 최고 : %s%n%n",XMLDOM.getText(local_taElement, "week1_local_ta_maxVal"));
				*/
				
				
				
				
				System.out.println("--------------------------------------------------------");
				
				
				
			}
			
			
			
			
			
			/*
			for (int i = 0; i < local_taNodeList.getLength(); i++)
			{
				Node local_taNode = local_taNodeList.item(i);
				Element local_taElement = (Element)local_taNode;
				
				//System.out.println(local_taElement.getChildNodes().item(i).getNodeName());
				
				//System.out.printf("지역 : %s%n%n",XMLDOM.getText(local_taElement, "local_ta_name"));
				
				
			}
			*/
			
		} catch (Exception e)
		{
			System.out.println(e.toString());
		}
		
	}
	
}
